<div class="head">
    <div class="search">
        <input type="text" name="search" id="searchtext" placeholder=" Search..." [(ngModel)]="searchKey"
            (input)="onsearch($event)">
        <ul *ngIf="suggest.length" class="suggest">
            <li *ngFor="let name of suggest; let i = index" (click)="onsearch(name)">{{name}} <sub class="catogaries">in
                    catogaries</sub></li>
        </ul>
    </div>
    <div class="logo">
        <!-- <img src="/assets/SPP.png" alt="shop logo" height="49px"> -->
        <a class="txt1">Suriya</a><a class="txt2">Pyro Park</a>
    </div>
    <div class="buttons">
        <a class="b1" [routerLink]="[ 'user/productsList']" routerLinkActive="active" *ngIf="!isAdmin"><span
                class="bi bi-houses"></span>&nbsp; Home</a>
        <a class="b1" [routerLink]="[ 'user/viewCart']" routerLinkActive="active" *ngIf="!isAdmin"><span
                class="bi bi-cart3"></span>&nbsp; View Cart
                </a>    
        <a class="b1" [routerLink]="[ 'user/orderStatus']" routerLinkActive="active" *ngIf="!isAdmin"><span
                class="bi bi-bag-check-fill"></span>&nbsp;Orders
                </a>
        <a class="b1" [routerLink]="[ 'admin/dashBoard']" routerLinkActive="active" *ngIf="isAdmin"><span
                class="bi bi-speedometer2"></span>&nbsp;DashBoard
                </a>
        <a class="b1" [routerLink]="[ 'admin/addProducts']" routerLinkActive="active" *ngIf="isAdmin"><span
                class="bi bi-cart-plus"></span>&nbsp;
            Add to Inventory</a>
        <a class="b1" [routerLink]="[ 'admin/productsList']" routerLinkActive="active" *ngIf="isAdmin"><span
                class="bi bi-view-list"></span>&nbsp;
            ProductList</a>
        <a class="b1" (click)="logout()">&nbsp;&nbsp;<span
         class="bi bi-power"></span>&nbsp;&nbsp;</a>
        <!-- <button type="submit"  (click)="showProfile()"><i class="bi bi-person-circle"></i></button> -->
    </div>
</div>





.head {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 40px;
    background-color: white;
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 5px;
    padding: 0 1rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    overflow: hidden;
}

.search {
    /* flex: 1 1 auto; */
    width: 50%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
}

input {
    border: 1px solid;
    padding: 0.2rem;
    border-radius: 6px;
}

input:focus {
    outline: none;
}

.suggest {
    display: flex;
    flex-direction: column;
    flex: 1 1 auto;
    width: 49%;
    background: whitesmoke;
    border: 1px solid #CCC;
    border-top: none;
    border-radius: 0 0 4px 4px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    overflow-y: auto;
    max-height: 250px;
    position: fixed;
    top: 35px;
    margin-top: 2px;
    z-index: 10000;
}

:host ::ng-deep ul.suggest {
    padding: 4px;
}

.suggest li {
    border: none;
    border-bottom: 1px solid darkslategrey;
    width: auto;
    padding: 8px 12px;
    cursor: pointer;
    list-style: none;
    display: flex;
    flex-direction: row;
    align-items: baseline;
    justify-content: space-between;
}

.suggest li .catogaries {
    color: grey;
    font-size: xx-small;
}

.suggest li:hover {
    background: #f5f5f5;
}

.logo {
    background: transparent;
    display: flex;
    flex-direction: column;
    line-height: 12px;
    text-align: center;
    font-weight: 500;
}

.logo .txt1 {
    font-size: x-large !important;
    color: #c1272d !important;
    text-shadow: 0 2px 4px rgba(193, 39, 45, 0.2);
}

.logo .txt2 {
    font-size: x-small !important;
    background: transparent;
    color: #c69c6d !important;
    text-shadow: 0 2px 4px rgba(193, 39, 45, 0.5);
}

.buttons {
    padding: 0 1rem;
    display: flex;
    right: 0;
    float: right;
    flex-direction: row;
    gap: 20px;
    align-items: center;
    text-align: center;
    font-size: large;
}

.buttons a {
    padding: 2px;
    display: flex;
    color: #007bff;
}

.buttons a:hover {
    text-decoration: none;
    color: #3c8fe9;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.buttons a.active {
    color: #3c8fe9;
    background-color:  rgba(0, 0, 0, 0.1);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}



    if (typeof term === 'string') {
      if (term) {
        this.suggestions = []
        this.searchKey = term;
        this.router.navigate(['/' + this.authorize.getUserRole() + '/productsList'],
          {
            relativeTo: this.route,
            queryParams: { search: term },
            queryParamsHandling: 'merge',
            replaceUrl: true
          })
        this.search.setSearchKeyword(term);
        this.productHndler.filteredProducts(term)
      }
    } else {
      const search = term.target as HTMLInputElement;
      if (search.value.length >= 1) {
        this.router.navigate([],
          {
            relativeTo: this.route,
            queryParams: { search: search.value },
            queryParamsHandling: 'merge',
            replaceUrl: true
          }
        )
        this.suggestions = this.names.filter(name => name.toLowerCase().includes(search.value.toLowerCase()));
        if (this.suggestions.length == 0) {
          this.search.jobError("No Matching products found!!")
        } else {
          this.search.setSearchKeyword(search.value);
          this.productHndler.filteredProducts(search.value)
        }
      }
      else {
        this.suggestions = []
        this.search.setSearchKeyword('')
      }
    }